# Dark powerded Vim/Neovim plugin manager
[[plugins]]
repo = 'shougo/dein.vim'

# Lean & mean status/tabline for vim
[[plugins]]
repo = 'vim-airline/vim-airline'
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

# Visualizing indentation
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_char = '¦'
  let g:indentLine_leadingSpaceChar = '·'
  let g:indentLine_leadingSpaceEnabled = 1
'''

# auto pair completion
[[plugins]]
repo = 'jiangmiao/auto-pairs'

# A dark plugin to unite all interefaces
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = '''
  source ~/.config/nvim/rc/plugins/denite.rc.vim
'''
hook_add = '''
  nnoremap <silent> <leader><leader>w
    \ <cmd>Denite file/rec -start-filter<cr>
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
      \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> e
      \ denite#do_map('do_action', 'open')
    nnoremap <silent><buffer><expr> p
      \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> s
      \ denite#do_map('do_action', 'split')
    nnoremap <silent><buffer><expr> v
      \ denite#do_map('do_action', 'vsplit')
    nnoremap <silent><buffer><expr> t
      \ denite#do_map('do_action', 'tabopen')
    nnoremap <silent><buffer><expr> q
      \ denite#do_map('quit')
  endfunction
'''

# to use denite.nvim with vim
[[plugins]]
repo = 'roxma/nvim-yarp'
on_if = '!has("nvim")'
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

# Git
[[plugins]]
repo = 'tpope/vim-fugitive'

# Language Server Protocol
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
merged = 0
hook_add = '''
  source ~/.config/nvim/rc/plugins/coc.nvim.rc.vim
'''

# Syntax for TOML
[[plugins]]
repo = 'cespare/vim-toml'

# Syntax highlighting, matching rules aand mappings for markdown
[[plugins]]
repo = 'godlygeek/tabular'
[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = '''
  let g:vim_markdown_folding_disabled = 1
'''

